#include:
#- template: Security/Dependency-Scanning.gitlab-ci.yml

stages:
  - check
  - test
  - build
  - publish

services:
- postgres:latest


variables:
  CONTAINER_PYTHON_IMAGE: python:3.9
  CONTAINER_NODE_IMAGE: node:latest
  POSTGRES_DB: bounca
  POSTGRES_USER: bounca
  POSTGRES_PASSWORD: changeit
  REGEX_RELEASE: /^release*$/

.release_only: &release_only
  only:
    - /^release*$/
  except:
    - tags

#check-python:
#  stage: check
#  image: $CONTAINER_PYTHON_IMAGE
#  before_script:
#    - python --version
#    - pip install virtualenv
#    - virtualenv env
#    - source ./env/bin/activate
#    - pip install -r requirements.txt
#  script:
#    - bash -xe run-checks-python.sh
#  artifacts:
#    expire_in: 2 hrs
#    paths:
#      - env

check-node:
  stage: check
  image: $CONTAINER_NODE_IMAGE
  script:
    - bash -xe run-checks-node.sh
  artifacts:
    expire_in: 2 hrs
    paths:
      - front/node_modules
      - front/package-lock.json

#test-python:
#  stage: test
#  image: $CONTAINER_PYTHON_IMAGE
#  dependencies:
#    - check-python
#  script:
#    - ls
#    - mkdir -p /var/log/bounca/
#    - cp ./etc/bounca/services.yaml.example ./etc/bounca/services.yaml
#    - bash -xe run-tests.sh
#  artifacts:
#    reports:
#      cobertura: coverage.xml


build-node:
  stage: build
  image: $CONTAINER_NODE_IMAGE
  script:
    - bash -xe build-front.sh
  dependencies:
    - build-node
  artifacts:
    name: $CI_COMMIT_REF_NAME
    expire_in: 2 hrs
    paths:
      - front/dist

#publish:
#  <<: *release_only
#  stage: publish
#  image: $CONTAINER_PYTHON_IMAGE
#  dependencies:
#    - build-node
#  script:
#    - set -u
#
