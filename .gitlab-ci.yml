include:
- template: Security/Dependency-Scanning.gitlab-ci.yml

stages:
  - check
  - test
  - build
  - publish

services:
- postgres:latest


variables:
  CONTAINER_PYTHON_IMAGE: python:3.9
  CONTAINER_NODE_IMAGE: node:latest
  REGEX_RELEASE: /^release*$/

before_script:
  - python --version
  - pip install -r requirements.txt

.release_only: &release_only
  only:
    - /^release*$/
  except:
    - tags

check-python:
  stage: check
  image: $CONTAINER_PYTHON_IMAGE
  variables:
    GIT_STRATEGY: clone
  tags:
    - docker
  script:
    - bash run-checks-python.sh

check-node:
  stage: check
  image: $CONTAINER_NODE_IMAGE
  variables:
    GIT_STRATEGY: clone
  tags:
    - docker
  script:
    - bash run-checks-node.sh

test:
  stage: test
  image: $CONTAINER_PYTHON_IMAGE
  variables:
    GIT_STRATEGY: clone
  tags:
    - docker
  script:
    - bash run-tests.sh

build:
  stage: build
  image: $CONTAINER_PYTHON_IMAGE
  variables:
    GIT_STRATEGY: clone
  tags:
    - docker
  script:
    - bash make-package.sh
  artifacts:
    name: $CI_COMMIT_REF_NAME
    expire_in: 2 hrs
    paths:
      - out

publish:
  <<: *release_only
  stage: publish
  image: $CONTAINER_PYTHON_IMAGE
  variables:
    GIT_STRATEGY: none
  tags:
    - docker
  dependencies:
    - build
  script:
    - set -u

