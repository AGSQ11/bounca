events {}

http{
    server {
        listen 80;
        server_name localhost;
        return 301 https://$server_name:8443$request_uri;
    }

    server {
        listen 443 ssl;
        server_name localhost;
        ssl_certificate      /etc/nginx/certs/localhost-chain.pem;
        ssl_certificate_key  /etc/nginx/certs/localhost.key;

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log debug;

        # curl -v --cert cert.crt --key key.key --pass foobar https://testserver/soap/request
        # curl -v --cacert rootca.pem --cert jeroen.pem --key jeroen.key https://localhost:8443
        # curl -v --cacert rootca.pem --cert jeroen.pem --key jeroen.key https://localhost:8443

        # https://stackoverflow.com/questions/8431528/nginx-ssl-certificate-authentication-signed-by-intermediate-ca-chain
        # https://trac.nginx.org/nginx/ticket/301
        #https://serverfault.com/questions/475180/nginx-and-client-certificates-from-hierarchical-openssl-based-certification-auth

        ssl_client_certificate /etc/nginx/certs/BounCA_Int_Root.intermediate-chain.pem;
        ssl_verify_depth 2;
        # make verification optional, so we can display a (custom) 403 message to those
        # who fail authentication. Option can also be 'on', in that case nging will drop a default error.
        ssl_verify_client optional;

        ssl_crl /etc/nginx/certs/int.crl.pem;
        # Nginx doesn't check the intermediate certificate, add the following rule to check for the correct intermediate chain
        # you can fetch the subject by the following command: openssl x509 -in intermediate.pem -noout -subject
        # you can expose the value of $ssl_client_i_dn by adding a header in the location scope: add_header X-debug-message "$ssl_client_i_dn" always;

        if ($ssl_client_i_dn != "emailAddress=ca@bounca.org,CN=BounCA Intermediate CA,OU=IT,O=BounCA,L=Amsterdam,ST=Noord Holland,C=NL") {
          return 403;
        }

        location / {

            if ($ssl_client_verify != SUCCESS) {
               return 403;
            }
            root /var/www;
        }
    }
}
